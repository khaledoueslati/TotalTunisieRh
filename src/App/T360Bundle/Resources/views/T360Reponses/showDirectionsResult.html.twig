{% extends 'AppT360Bundle::BasePage.html.twig' %}


{% block body %}

    <script type="text/javascript" src="{{ asset('bundles/AppT360/js/highcharts.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/AppT360/js/highcharts-more.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/AppT360/js/exporting.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/AppT360/js/drilldown.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/AppT360/js/no-data-to-display.js') }}"></script>

    <script type="text/javascript">
    $(document).ready(function () {
        Highcharts.setOptions({
            colors: ['#ED1A3B', '#4596D1', '#F8981D', '#034EA2']
        });
        /*********************************Donnes generale ********************/


        var axes = [];
        var direction = [];
        var valeurs = [];
        var dataObj = [];
        var directionsId = [];
        var directionLibelle=[];
        var ecarts=[];
        /***********************************Donnes specifique aux directions*********************************/
        var brandsData = [];
        var drilldownData = [];
        /***********************************appel AJAX*********************************/
        $.ajax({
            url: "{{ path('get_directions_results_service') }}"
        }).then(function (data) {

            var oldDirection = "";

            var temp = {
                name: '',
                data: []
            };
            for (var i = 0; i < data.length; i++) {
                axes.push(data[i].questionEnonce);

                if (oldDirection != data[i].directionLibelle) {
                    if (temp.data.length > 0) {
                        dataObj.push(temp);
                    }
                    temp = {
                        name: '',
                        data: []
                    };
                    temp.name = data[i].directionLibelle;
                    oldDirection = data[i].directionLibelle;
                    temp.data.push(parseFloat(data[i].moyenne));
                    directionsId.push(parseInt(data[i].idDirection));
                    directionLibelle.push(data[i].directionLibelle);
                } else {
                    temp.data.push(parseFloat(data[i].moyenne));
                }

            }
            dataObj.push(temp);
            /***********************emulation de la 2em Direction*****************************/
//
            console.log(dataObj);


            /****************************Construction du graphe**********************************************/

            $(function () {

                $('#all-directions').highcharts({
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: "Moyenne d'évaluation de tout les directions"
                    },

                    xAxis: {
                        categories: axes,
                        crosshair: true
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Moyennes des évaluations'
                        }
                    },
                    tooltip: {
                        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                        '<td style="padding:0"><b>{point.y:.1f}</b></td></tr>',
                        footerFormat: '</table>',
                        shared: true,
                        useHTML: true
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },
                    credits: {
                        enabled: false
                    },
                    series: dataObj
                });
            });


            /****************************construction des données de graphe dedié à chaque **********************************************/
//            var tempBrandsData = [];
//            var tempDrillDown = [];

//                var idDirectionOld = 0;
            var axeOld = "";

            var directionResultURL = "{{ path("get_directions_results_service_by_id",{"id":0}) }}";
            directionResultURL = "/" + directionResultURL.substring(directionResultURL.length - 1, 1);
            console.log(directionResultURL);
            var directionEcartURL = "{{ path("ecart_directions",{"id":0}) }}";
            directionEcartURL = "/" + directionEcartURL.substring(directionEcartURL.length - 1, 1);
            console.log(directionEcartURL);
            for (var i = 0; i < directionsId.length; i++) {
//            var i=0;

//                var urlGlobal=directionResultURL + directionsId[i];
                $.ajax({url: directionResultURL + directionsId[i]}).then(function (data) {
                    var tempBrandsData = new Array();

                    var tempDrillDown = new Array();
                    var drillDownObj = {data: [], id: "", name: ""};
                    var brandsDataObj = {
                        drilldown: "",
                        name: "",
                        y: 0
                    };
                    console.log("data");
                    console.log(data);
                    var compteur = 0;
                    var somme = 0;
                    var last=false;
                    for (var j = 0; j < data.length; j++) {
                        if(j==0){
                            last=false;
                        }
                        if (axeOld != data[j].axeLibelle) {
                            if (brandsDataObj.drilldown != "" && drillDownObj.data.length != 0) {
                                if (compteur != 0) {
                                    brandsDataObj.y = somme / compteur;
                                }
                                tempBrandsData.push(brandsDataObj);
                                tempDrillDown.push(drillDownObj);

                                brandsDataObj = {
                                    drilldown: "",
                                    name: "",
                                    y: 0
                                };
                                drillDownObj = {id: "", name: "", data: []};
                            }
                            drillDownObj.id = data[j].axeLibelle;
                            drillDownObj.name = data[j].axeLibelle;
                            drillDownObj.data.push([data[j].questionEnonce, parseFloat(data[j].moyenne)]);

                            brandsDataObj.name = data[j].axeLibelle;
                            brandsDataObj.drilldown = data[j].axeLibelle;

                            somme = parseFloat(data[j].moyenne);
                            compteur = 1;
                            axeOld = data[j].axeLibelle;
                        } else {
                            drillDownObj.data.push([data[j].questionEnonce, parseFloat(data[j].moyenne)]);
                            somme += parseFloat(data[j].moyenne);
                            compteur++;
                        }
                    }
                    if (compteur != 0) {
                        brandsDataObj.y = somme / compteur;
                    }
                    tempBrandsData.push(brandsDataObj);
                    tempDrillDown.push(drillDownObj);
                    if(j==data.length){
                        drilldownData.push(tempDrillDown);
                        brandsData.push(tempBrandsData);
                    }
//                    drilldownData.push(tempDrillDown);
//                    brandsData.push(tempBrandsData);
                });

                $.ajax({url: directionEcartURL+directionsId[i]}).then(function (data) {
                    ecarts.push(data);
                });



            }


        });

        function findPosition(array, value) {
            var i;
            for (i = 0; i < array.length; i++) {
                if (array[i] == value) {
                    break;
                }
            }
            return i;
        }

        /****************************Gestion de click pour les nav tabs **********************************************/
        $('.clickable').click(function () {


            var index = findPosition(directionsId, parseInt($(this).attr("data-id")));
            console.log("ecarts");
            console.log(ecarts);
            console.log(ecarts[index]["red"]);
            console.log(ecarts[index]["yello"]);
            console.log(ecarts[index]["green"]);
            Highcharts.setOptions({
                lang: {
                    drillUpText: '◁ {series.name}'
                }
            });
            $('#drill-douwn-chart').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: "Moyenne d'évaluation"
                },
                subtitle: {
                    text: directionLibelle[index]
                },
                xAxis: {
                    type: 'category'
                },
                legend: {
                    enabled: false
                },
                plotOptions: {
                    series: {

                        borderWidth: 0,
                        dataLabels: {
                            enabled: true,
                            format: '{point.y:.1f}'
                        }

                    }
                },
                lang: {
                    noData: "Pas de donnée reçu"
                },
                noData: {
                    style: {
                        fontWeight: 'bold',
                        fontSize: '15px',
                        color: '#797980'
                    }
                },
                credits: {
                    enabled: false
                },
                tooltip: {
                    headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                    pointFormat: '<span style="color:{point.color}">{point.name}</span>'
                },

                series: [{
                    name: 'Axes d\'évaluations',
                    colorByPoint: true,
                    data:  brandsData[index]
                }],
                drilldown: {
                    series: drilldownData[index]
                }
            });

            $('#pie-chart').highcharts({
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false
                },
                title: {
                    text: " Pourcentage d'ecart des évaluations"
                },

                colors: ['#ED1A3B', '#F8981D', '#33CC00'],

                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            format: ' {point.percentage:.1f} %',
                            style: {
                                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                            }
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                series: [{
                    type: 'pie',
                    name: 'Ecart',
                    data: []
                }]
            });
            var chart = $('#pie-chart').highcharts();
            if(ecarts[index]){
                chart.series[0].addPoint(ecarts[index]["red"]);
                chart.series[0].addPoint(ecarts[index]["yello"]);
                chart.series[0].addPoint(ecarts[index]["green"]);
            }
        })
    });

    </script>
    <br/>
    <div class="container-fluid"><!-- directions tab -->
    <div class="box">
        <div class="nav-tabs-custom nav">
            <ul class="nav nav-tabs ">
                {% for direction in directions %}
                    <li><a href="#chart-section" class="clickable" data-id="{{ direction.idDirection }}"
                           data-toggle="tab">{{ direction.libelle }}</a></li>
                {% endfor %}

            </ul>


            <div class="tab-content">
                <div id="chart-section">
                    <div class="col-lg-12">
                        <p>

                        <div class="col-lg-8 border-right" id="drill-douwn-chart"></div>

                        <div id="pie-chart" class="col-lg-4"></div>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br/>

    <div class="container-fluid">
        <div id="all-directions">
        </div>

    </div>
{% endblock %}